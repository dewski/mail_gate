{"name":"MailGate","body":"## Installation\r\n\r\nAdd the following line to your application's Gemfile:\r\n\r\n    gem 'mail_gate'\r\n\r\nAnd then run:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself with:\r\n\r\n    $ gem install mail_gate\r\n\r\n## Usage\r\n\r\nMailGate works as a standalone extension to the [Mail](https://github.com/mikel/mail) gem or as a delivery method within Rails applications.\r\n\r\nTo configure MailGate, edit your ActionMailer configuration to use `:mail_gate` as the delivery method, then copy your existing settings to  `mail_gate_settings`:\r\n\r\n```ruby\r\n# config/environments/staging.rb\r\nCNN::Application.configure do\r\n  config.action_mailer.delivery_method = :smtp\r\n  config.action_mailer.smtp_settings = {\r\n    :address        => 'smtp.sendgrid.net',\r\n    :port           => '25',\r\n    :authentication => :plain,\r\n    :user_name      => ENV['SENDGRID_USERNAME'],\r\n    :password       => ENV['SENDGRID_PASSWORD'],\r\n    :domain         => ENV['SENDGRID_DOMAIN']\r\n  }\r\nend\r\n```\r\n\r\nBecomes:\r\n\r\n```ruby\r\n# config/environments/staging.rb\r\nCNN::Application.configure do\r\n  config.action_mailer.delivery_method = :mail_gate\r\n  config.action_mailer.mail_gate_settings = {\r\n    :whitelist        => /cnn.com/,\r\n    :delivery_method  => :smtp,\r\n    :delivery_settings => {\r\n      :address        => 'smtp.sendgrid.net',\r\n      :port           => '25',\r\n      :authentication => :plain,\r\n      :user_name      => ENV['SENDGRID_USERNAME'],\r\n      :password       => ENV['SENDGRID_PASSWORD'],\r\n      :domain         => ENV['SENDGRID_DOMAIN']\r\n    }\r\n  }\r\nend\r\n```\r\n\r\nWhen the email is sent, any emails that end up being extracted because they don't match the whitelist will be appended to the email's body so you know the intended recipients. So if you had a whitelist only for CNN.com, and you sent an email out to nytimes.com, it'd look something like:\r\n\r\n```\r\nThanks for reading our interesting article!\r\n\r\nExtracted Recipients: user@nytimes.com\r\n```\r\n\r\nIf you dislike that behavior, you can easily turn it off by setting `append_emails` to `false` in the settings.\r\n\r\n\r\n```ruby\r\n# config/environments/staging.rb\r\nCNN::Application.configure do\r\n  config.action_mailer.delivery_method = :mail_gate\r\n  config.action_mailer.mail_gate_settings = {\r\n    :whitelist     => /cnn.com/,\r\n    :append_emails => false\r\n  }\r\nend\r\n```\r\n\r\nBy default the emails send will have the same subject that they normally would. If you'd like to customize the subject to inform the reader where it was sent from you can do that with the `:subject_prefix` option:\r\n\r\n```ruby\r\n# config/environments/staging.rb\r\nCNN::Application.configure do\r\n  config.action_mailer.delivery_method = :mail_gate\r\n  config.action_mailer.mail_gate_settings = {\r\n    :whitelist        => /cnn.com/,\r\n    :subject_prefix   => '[Staging] ',\r\n    # ...\r\n  }\r\nend\r\n```\r\n\r\nNow your emails that are sent will have `[Staging] New comment on your article!` as the subject rather than just `New comment on your article!`. It's entirely up to you what you may put as the prefix, be it the current deploy git SHA, or if you want to send the server's hostname that sent the mail.\r\n\r\nEmail now sent within the staging environment will extract any recipient emails that don't match the whitelist. If after being filtered there aren't any recipients left because they were filtered out, no email will be sent:\r\n\r\n```\r\n> Article.first.comments.each do |comment|\r\n>   \"Email for: #{comment.user.email}\"\r\n>   ArticleMailer.new_comment(article, comment).deliver\r\n> end\r\n=> Email for: john.doe@gmail.com\r\n=> Email for: megatron@transformers.com\r\n=> Email for: george@cnn.com\r\n=> #<Mail::Message:70236177475420, Headers: <From: no-reply@cnn.com>,\r\n   <To: george@cnn.com>, <Subject: [Staging] New comment on your article!>>\r\n```\r\n\r\nNotice only the email for `george@cnn.com` was delivered.\r\n\r\n## Using MailGate outside of Rails\r\n\r\nIf you have a Sinatra app or just using the Mail library in your Ruby project you can still use MailGate:\r\n\r\n```ruby\r\nrequire 'mail_gate'\r\n\r\nMail.defaults do\r\n  delivery_method MailGate::Filter,\r\n    :whitelist => /cnn.com/,\r\n    :subject_prefix => '[local] ',\r\n    :delivery_method => :file,\r\n    :location => '/dev/null'\r\nend\r\n```\r\n\r\nThen just deliver the email as normal:\r\n\r\n```ruby\r\nMail.deliver do\r\n  to 'george@cnn.com'\r\n  from 'no-reply@cnn.com'\r\n  subject 'Testing MailGate'\r\n  body 'Hi! :)'\r\nend\r\n```\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n## Copyright\r\nCopyright Â© 2012 Garrett Bjerkhoel. See [LICENSE](https://github.com/dewski/mail_gate/blob/master/LICENSE) for details.","tagline":"MailGate is an additional delivery method for the Mail gem that lets you restrict the delivery of mail to only whitelisted emails.","google":"UA-26132095-2"}